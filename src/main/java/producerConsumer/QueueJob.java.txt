package producerConsumer;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.LinkedList;

public class QueueJob {

    private final Logger logger = LoggerFactory.getLogger(QueueJob.class);
    private final LinkedList<Integer> jobs = new LinkedList<>();
    private JobQueueListener listener;

    public QueueJob() {
        super();
    }

    public void addQueueJobListener(QueueJobListener listener) {

        this.listener = listener;
    }

    public interface QueueJobListener {

        void queueJobChanged(int newSize) throws InterruptedException;
    }

    public synchronized void queueJobs(int job) throws InterruptedException {

        synchronized (this) {
            this.jobs.add(job);
            if (this.listener != null) {
                this.listener.queueJobChanged(this.jobs.size());
            }
        }
    }

    public synchronized Integer getNextJob() throws InterruptedException {

        synchronized (this) {
            logger.info("Buscando próximo job. Tempo: {}", System.currentTimeMillis());

            if (this.jobs.isEmpty()) {
                return 0;
            }

            Integer job = this.jobs.removeFirst();

            if (this.listener != null) {
                this.listener.jobQueueChanged(this.jobs.size());
            }

            logger.info("Próximo job, {}", job);
            return job;
        }
    }
}